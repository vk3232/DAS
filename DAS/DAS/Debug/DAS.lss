
DAS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000572  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000216c  00000000  00000000  000005c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000763  00000000  00000000  00002734  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00002e97  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000008f  00000000  00000000  00002eb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002fa  00000000  00000000  00002f46  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000181  00000000  00000000  00003240  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000369  00000000  00000000  000033c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a0  00000000  00000000  0000372c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000165  00000000  00000000  000037cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c8  00000000  00000000  00003931  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000038  00000000  00000000  000039f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 c4 00 	call	0x188	; 0x188 <main>
  64:	0c 94 b7 02 	jmp	0x56e	; 0x56e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <LCD_COMMAND>:
#include <avr/io.h>
#include<util/delay.h>

void LCD_COMMAND(unsigned char Command)
{
	PORTC = 0b10000000;
  6c:	90 e8       	ldi	r25, 0x80	; 128
  6e:	95 bb       	out	0x15, r25	; 21
	PORTD = Command;
  70:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  72:	81 ee       	ldi	r24, 0xE1	; 225
  74:	94 e0       	ldi	r25, 0x04	; 4
  76:	01 97       	sbiw	r24, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <LCD_COMMAND+0xa>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <LCD_COMMAND+0x10>
  7c:	00 00       	nop
	_delay_ms(5);
	PORTC = 0b00000000;
  7e:	15 ba       	out	0x15, r1	; 21
}
  80:	08 95       	ret

00000082 <LCD_DATA>:
void LCD_DATA(unsigned char MESSAGE)
{
	PORTC = 0b10100000;
  82:	90 ea       	ldi	r25, 0xA0	; 160
  84:	95 bb       	out	0x15, r25	; 21
	PORTD = MESSAGE;
  86:	82 bb       	out	0x12, r24	; 18
  88:	81 ee       	ldi	r24, 0xE1	; 225
  8a:	94 e0       	ldi	r25, 0x04	; 4
  8c:	01 97       	sbiw	r24, 0x01	; 1
  8e:	f1 f7       	brne	.-4      	; 0x8c <LCD_DATA+0xa>
  90:	00 c0       	rjmp	.+0      	; 0x92 <LCD_DATA+0x10>
  92:	00 00       	nop
	_delay_ms(5);
	PORTC = 0b00100000;
  94:	80 e2       	ldi	r24, 0x20	; 32
  96:	85 bb       	out	0x15, r24	; 21
}
  98:	08 95       	ret

0000009a <Initialsie_LCD>:
void Initialsie_LCD(void)
{
	DDRC = 0xFF;
  9a:	8f ef       	ldi	r24, 0xFF	; 255
  9c:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF;
  9e:	81 bb       	out	0x11, r24	; 17
	LCD_COMMAND(0x38);
  a0:	88 e3       	ldi	r24, 0x38	; 56
  a2:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_COMMAND>
	LCD_COMMAND(0x0E);
  a6:	8e e0       	ldi	r24, 0x0E	; 14
  a8:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_COMMAND>
	LCD_COMMAND(0x06);
  ac:	86 e0       	ldi	r24, 0x06	; 6
  ae:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_COMMAND>
	LCD_COMMAND(0x01);
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_COMMAND>
	LCD_COMMAND(0x80);
  b8:	80 e8       	ldi	r24, 0x80	; 128
  ba:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_COMMAND>
}
  be:	08 95       	ret

000000c0 <LCD_clear>:
void LCD_clear()
{
	LCD_COMMAND(0x01);
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_COMMAND>
}
  c6:	08 95       	ret

000000c8 <LCD_Message>:
void LCD_Message(unsigned char ROW, unsigned char COL, char *Message)
{
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	ea 01       	movw	r28, r20
	if(ROW == 1)
  ce:	81 30       	cpi	r24, 0x01	; 1
  d0:	11 f4       	brne	.+4      	; 0xd6 <LCD_Message+0xe>
		ROW = 0x80;
  d2:	80 e8       	ldi	r24, 0x80	; 128
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <LCD_Message+0x10>
	else
		ROW = 0xC0;
  d6:	80 ec       	ldi	r24, 0xC0	; 192
	LCD_COMMAND(ROW|COL);
  d8:	86 2b       	or	r24, r22
  da:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_COMMAND>
	while(*Message)
  de:	88 81       	ld	r24, Y
  e0:	88 23       	and	r24, r24
  e2:	31 f0       	breq	.+12     	; 0xf0 <LCD_Message+0x28>
}
void LCD_clear()
{
	LCD_COMMAND(0x01);
}
void LCD_Message(unsigned char ROW, unsigned char COL, char *Message)
  e4:	21 96       	adiw	r28, 0x01	; 1
	else
		ROW = 0xC0;
	LCD_COMMAND(ROW|COL);
	while(*Message)
	{
		LCD_DATA(*Message);
  e6:	0e 94 41 00 	call	0x82	; 0x82 <LCD_DATA>
	if(ROW == 1)
		ROW = 0x80;
	else
		ROW = 0xC0;
	LCD_COMMAND(ROW|COL);
	while(*Message)
  ea:	89 91       	ld	r24, Y+
  ec:	88 23       	and	r24, r24
  ee:	d9 f7       	brne	.-10     	; 0xe6 <LCD_Message+0x1e>
	{
		LCD_DATA(*Message);
		Message++;
	}
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	08 95       	ret

000000f6 <adc_init>:
#include <avr/io.h>

void adc_init(void){
	 ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)); 
  f6:	86 b1       	in	r24, 0x06	; 6
  f8:	87 60       	ori	r24, 0x07	; 7
  fa:	86 b9       	out	0x06, r24	; 6
	 ADMUX |= (1<<REFS0); 
  fc:	3e 9a       	sbi	0x07, 6	; 7
	 ADCSRA |= (1<<ADEN); 
  fe:	37 9a       	sbi	0x06, 7	; 6
	 ADCSRA |= (1<<ADSC); 
 100:	36 9a       	sbi	0x06, 6	; 6
}
 102:	08 95       	ret

00000104 <analogRead>:

unsigned int analogRead(uint8_t channel){
	 ADMUX &= 0xF0; 
 104:	97 b1       	in	r25, 0x07	; 7
 106:	90 7f       	andi	r25, 0xF0	; 240
 108:	97 b9       	out	0x07, r25	; 7
	 ADMUX |= channel; 
 10a:	97 b1       	in	r25, 0x07	; 7
 10c:	89 2b       	or	r24, r25
 10e:	87 b9       	out	0x07, r24	; 7
	 ADCSRA |= (1<<ADSC); 
 110:	36 9a       	sbi	0x06, 6	; 6
	 while((ADCSRA & (1<<ADIF))==0); 
 112:	34 9b       	sbis	0x06, 4	; 6
 114:	fe cf       	rjmp	.-4      	; 0x112 <analogRead+0xe>
	 return ADCW; 
 116:	24 b1       	in	r18, 0x04	; 4
 118:	35 b1       	in	r19, 0x05	; 5
}
 11a:	82 2f       	mov	r24, r18
 11c:	93 2f       	mov	r25, r19
 11e:	08 95       	ret

00000120 <getPt>:

float getPt(uint8_t channel)
{
	int v = 5.0*(analogRead(channel)/1023.0);
 120:	0e 94 82 00 	call	0x104	; 0x104 <analogRead>
 124:	bc 01       	movw	r22, r24
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0e 94 c6 01 	call	0x38c	; 0x38c <__floatunsisf>
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 ec       	ldi	r19, 0xC0	; 192
 132:	4f e7       	ldi	r20, 0x7F	; 127
 134:	54 e4       	ldi	r21, 0x44	; 68
 136:	0e 94 2d 01 	call	0x25a	; 0x25a <__divsf3>
 13a:	20 e0       	ldi	r18, 0x00	; 0
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	40 ea       	ldi	r20, 0xA0	; 160
 140:	50 e4       	ldi	r21, 0x40	; 64
 142:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__mulsf3>
 146:	0e 94 95 01 	call	0x32a	; 0x32a <__fixsfsi>
	float Rx = v*79.489+14.187;
 14a:	88 27       	eor	r24, r24
 14c:	77 fd       	sbrc	r23, 7
 14e:	80 95       	com	r24
 150:	98 2f       	mov	r25, r24
 152:	0e 94 c8 01 	call	0x390	; 0x390 <__floatsisf>
 156:	2e e5       	ldi	r18, 0x5E	; 94
 158:	3a ef       	ldi	r19, 0xFA	; 250
 15a:	4e e9       	ldi	r20, 0x9E	; 158
 15c:	52 e4       	ldi	r21, 0x42	; 66
 15e:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__mulsf3>
 162:	24 ef       	ldi	r18, 0xF4	; 244
 164:	3d ef       	ldi	r19, 0xFD	; 253
 166:	42 e6       	ldi	r20, 0x62	; 98
 168:	51 e4       	ldi	r21, 0x41	; 65
 16a:	0e 94 c9 00 	call	0x192	; 0x192 <__addsf3>
	return (Rx/100.0)/0.0385;
 16e:	20 e0       	ldi	r18, 0x00	; 0
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	48 ec       	ldi	r20, 0xC8	; 200
 174:	52 e4       	ldi	r21, 0x42	; 66
 176:	0e 94 2d 01 	call	0x25a	; 0x25a <__divsf3>
 17a:	2d e2       	ldi	r18, 0x2D	; 45
 17c:	32 eb       	ldi	r19, 0xB2	; 178
 17e:	4d e1       	ldi	r20, 0x1D	; 29
 180:	5d e3       	ldi	r21, 0x3D	; 61
 182:	0e 94 2d 01 	call	0x25a	; 0x25a <__divsf3>
 186:	08 95       	ret

00000188 <main>:

int main(void)
{
    while(1)
    {
        float pt=  getPt(PT100);
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	0e 94 90 00 	call	0x120	; 0x120 <getPt>
 18e:	fc cf       	rjmp	.-8      	; 0x188 <main>

00000190 <__subsf3>:
 190:	50 58       	subi	r21, 0x80	; 128

00000192 <__addsf3>:
 192:	bb 27       	eor	r27, r27
 194:	aa 27       	eor	r26, r26
 196:	0e d0       	rcall	.+28     	; 0x1b4 <__addsf3x>
 198:	4d c1       	rjmp	.+666    	; 0x434 <__fp_round>
 19a:	3e d1       	rcall	.+636    	; 0x418 <__fp_pscA>
 19c:	30 f0       	brcs	.+12     	; 0x1aa <__addsf3+0x18>
 19e:	43 d1       	rcall	.+646    	; 0x426 <__fp_pscB>
 1a0:	20 f0       	brcs	.+8      	; 0x1aa <__addsf3+0x18>
 1a2:	31 f4       	brne	.+12     	; 0x1b0 <__addsf3+0x1e>
 1a4:	9f 3f       	cpi	r25, 0xFF	; 255
 1a6:	11 f4       	brne	.+4      	; 0x1ac <__addsf3+0x1a>
 1a8:	1e f4       	brtc	.+6      	; 0x1b0 <__addsf3+0x1e>
 1aa:	33 c1       	rjmp	.+614    	; 0x412 <__fp_nan>
 1ac:	0e f4       	brtc	.+2      	; 0x1b0 <__addsf3+0x1e>
 1ae:	e0 95       	com	r30
 1b0:	e7 fb       	bst	r30, 7
 1b2:	29 c1       	rjmp	.+594    	; 0x406 <__fp_inf>

000001b4 <__addsf3x>:
 1b4:	e9 2f       	mov	r30, r25
 1b6:	4f d1       	rcall	.+670    	; 0x456 <__fp_split3>
 1b8:	80 f3       	brcs	.-32     	; 0x19a <__addsf3+0x8>
 1ba:	ba 17       	cp	r27, r26
 1bc:	62 07       	cpc	r22, r18
 1be:	73 07       	cpc	r23, r19
 1c0:	84 07       	cpc	r24, r20
 1c2:	95 07       	cpc	r25, r21
 1c4:	18 f0       	brcs	.+6      	; 0x1cc <__addsf3x+0x18>
 1c6:	71 f4       	brne	.+28     	; 0x1e4 <__addsf3x+0x30>
 1c8:	9e f5       	brtc	.+102    	; 0x230 <__addsf3x+0x7c>
 1ca:	67 c1       	rjmp	.+718    	; 0x49a <__fp_zero>
 1cc:	0e f4       	brtc	.+2      	; 0x1d0 <__addsf3x+0x1c>
 1ce:	e0 95       	com	r30
 1d0:	0b 2e       	mov	r0, r27
 1d2:	ba 2f       	mov	r27, r26
 1d4:	a0 2d       	mov	r26, r0
 1d6:	0b 01       	movw	r0, r22
 1d8:	b9 01       	movw	r22, r18
 1da:	90 01       	movw	r18, r0
 1dc:	0c 01       	movw	r0, r24
 1de:	ca 01       	movw	r24, r20
 1e0:	a0 01       	movw	r20, r0
 1e2:	11 24       	eor	r1, r1
 1e4:	ff 27       	eor	r31, r31
 1e6:	59 1b       	sub	r21, r25
 1e8:	99 f0       	breq	.+38     	; 0x210 <__addsf3x+0x5c>
 1ea:	59 3f       	cpi	r21, 0xF9	; 249
 1ec:	50 f4       	brcc	.+20     	; 0x202 <__addsf3x+0x4e>
 1ee:	50 3e       	cpi	r21, 0xE0	; 224
 1f0:	68 f1       	brcs	.+90     	; 0x24c <__addsf3x+0x98>
 1f2:	1a 16       	cp	r1, r26
 1f4:	f0 40       	sbci	r31, 0x00	; 0
 1f6:	a2 2f       	mov	r26, r18
 1f8:	23 2f       	mov	r18, r19
 1fa:	34 2f       	mov	r19, r20
 1fc:	44 27       	eor	r20, r20
 1fe:	58 5f       	subi	r21, 0xF8	; 248
 200:	f3 cf       	rjmp	.-26     	; 0x1e8 <__addsf3x+0x34>
 202:	46 95       	lsr	r20
 204:	37 95       	ror	r19
 206:	27 95       	ror	r18
 208:	a7 95       	ror	r26
 20a:	f0 40       	sbci	r31, 0x00	; 0
 20c:	53 95       	inc	r21
 20e:	c9 f7       	brne	.-14     	; 0x202 <__addsf3x+0x4e>
 210:	7e f4       	brtc	.+30     	; 0x230 <__addsf3x+0x7c>
 212:	1f 16       	cp	r1, r31
 214:	ba 0b       	sbc	r27, r26
 216:	62 0b       	sbc	r22, r18
 218:	73 0b       	sbc	r23, r19
 21a:	84 0b       	sbc	r24, r20
 21c:	ba f0       	brmi	.+46     	; 0x24c <__addsf3x+0x98>
 21e:	91 50       	subi	r25, 0x01	; 1
 220:	a1 f0       	breq	.+40     	; 0x24a <__addsf3x+0x96>
 222:	ff 0f       	add	r31, r31
 224:	bb 1f       	adc	r27, r27
 226:	66 1f       	adc	r22, r22
 228:	77 1f       	adc	r23, r23
 22a:	88 1f       	adc	r24, r24
 22c:	c2 f7       	brpl	.-16     	; 0x21e <__addsf3x+0x6a>
 22e:	0e c0       	rjmp	.+28     	; 0x24c <__addsf3x+0x98>
 230:	ba 0f       	add	r27, r26
 232:	62 1f       	adc	r22, r18
 234:	73 1f       	adc	r23, r19
 236:	84 1f       	adc	r24, r20
 238:	48 f4       	brcc	.+18     	; 0x24c <__addsf3x+0x98>
 23a:	87 95       	ror	r24
 23c:	77 95       	ror	r23
 23e:	67 95       	ror	r22
 240:	b7 95       	ror	r27
 242:	f7 95       	ror	r31
 244:	9e 3f       	cpi	r25, 0xFE	; 254
 246:	08 f0       	brcs	.+2      	; 0x24a <__addsf3x+0x96>
 248:	b3 cf       	rjmp	.-154    	; 0x1b0 <__addsf3+0x1e>
 24a:	93 95       	inc	r25
 24c:	88 0f       	add	r24, r24
 24e:	08 f0       	brcs	.+2      	; 0x252 <__addsf3x+0x9e>
 250:	99 27       	eor	r25, r25
 252:	ee 0f       	add	r30, r30
 254:	97 95       	ror	r25
 256:	87 95       	ror	r24
 258:	08 95       	ret

0000025a <__divsf3>:
 25a:	0c d0       	rcall	.+24     	; 0x274 <__divsf3x>
 25c:	eb c0       	rjmp	.+470    	; 0x434 <__fp_round>
 25e:	e3 d0       	rcall	.+454    	; 0x426 <__fp_pscB>
 260:	40 f0       	brcs	.+16     	; 0x272 <__divsf3+0x18>
 262:	da d0       	rcall	.+436    	; 0x418 <__fp_pscA>
 264:	30 f0       	brcs	.+12     	; 0x272 <__divsf3+0x18>
 266:	21 f4       	brne	.+8      	; 0x270 <__divsf3+0x16>
 268:	5f 3f       	cpi	r21, 0xFF	; 255
 26a:	19 f0       	breq	.+6      	; 0x272 <__divsf3+0x18>
 26c:	cc c0       	rjmp	.+408    	; 0x406 <__fp_inf>
 26e:	51 11       	cpse	r21, r1
 270:	15 c1       	rjmp	.+554    	; 0x49c <__fp_szero>
 272:	cf c0       	rjmp	.+414    	; 0x412 <__fp_nan>

00000274 <__divsf3x>:
 274:	f0 d0       	rcall	.+480    	; 0x456 <__fp_split3>
 276:	98 f3       	brcs	.-26     	; 0x25e <__divsf3+0x4>

00000278 <__divsf3_pse>:
 278:	99 23       	and	r25, r25
 27a:	c9 f3       	breq	.-14     	; 0x26e <__divsf3+0x14>
 27c:	55 23       	and	r21, r21
 27e:	b1 f3       	breq	.-20     	; 0x26c <__divsf3+0x12>
 280:	95 1b       	sub	r25, r21
 282:	55 0b       	sbc	r21, r21
 284:	bb 27       	eor	r27, r27
 286:	aa 27       	eor	r26, r26
 288:	62 17       	cp	r22, r18
 28a:	73 07       	cpc	r23, r19
 28c:	84 07       	cpc	r24, r20
 28e:	38 f0       	brcs	.+14     	; 0x29e <__divsf3_pse+0x26>
 290:	9f 5f       	subi	r25, 0xFF	; 255
 292:	5f 4f       	sbci	r21, 0xFF	; 255
 294:	22 0f       	add	r18, r18
 296:	33 1f       	adc	r19, r19
 298:	44 1f       	adc	r20, r20
 29a:	aa 1f       	adc	r26, r26
 29c:	a9 f3       	breq	.-22     	; 0x288 <__divsf3_pse+0x10>
 29e:	33 d0       	rcall	.+102    	; 0x306 <__divsf3_pse+0x8e>
 2a0:	0e 2e       	mov	r0, r30
 2a2:	3a f0       	brmi	.+14     	; 0x2b2 <__divsf3_pse+0x3a>
 2a4:	e0 e8       	ldi	r30, 0x80	; 128
 2a6:	30 d0       	rcall	.+96     	; 0x308 <__divsf3_pse+0x90>
 2a8:	91 50       	subi	r25, 0x01	; 1
 2aa:	50 40       	sbci	r21, 0x00	; 0
 2ac:	e6 95       	lsr	r30
 2ae:	00 1c       	adc	r0, r0
 2b0:	ca f7       	brpl	.-14     	; 0x2a4 <__divsf3_pse+0x2c>
 2b2:	29 d0       	rcall	.+82     	; 0x306 <__divsf3_pse+0x8e>
 2b4:	fe 2f       	mov	r31, r30
 2b6:	27 d0       	rcall	.+78     	; 0x306 <__divsf3_pse+0x8e>
 2b8:	66 0f       	add	r22, r22
 2ba:	77 1f       	adc	r23, r23
 2bc:	88 1f       	adc	r24, r24
 2be:	bb 1f       	adc	r27, r27
 2c0:	26 17       	cp	r18, r22
 2c2:	37 07       	cpc	r19, r23
 2c4:	48 07       	cpc	r20, r24
 2c6:	ab 07       	cpc	r26, r27
 2c8:	b0 e8       	ldi	r27, 0x80	; 128
 2ca:	09 f0       	breq	.+2      	; 0x2ce <__divsf3_pse+0x56>
 2cc:	bb 0b       	sbc	r27, r27
 2ce:	80 2d       	mov	r24, r0
 2d0:	bf 01       	movw	r22, r30
 2d2:	ff 27       	eor	r31, r31
 2d4:	93 58       	subi	r25, 0x83	; 131
 2d6:	5f 4f       	sbci	r21, 0xFF	; 255
 2d8:	2a f0       	brmi	.+10     	; 0x2e4 <__divsf3_pse+0x6c>
 2da:	9e 3f       	cpi	r25, 0xFE	; 254
 2dc:	51 05       	cpc	r21, r1
 2de:	68 f0       	brcs	.+26     	; 0x2fa <__divsf3_pse+0x82>
 2e0:	92 c0       	rjmp	.+292    	; 0x406 <__fp_inf>
 2e2:	dc c0       	rjmp	.+440    	; 0x49c <__fp_szero>
 2e4:	5f 3f       	cpi	r21, 0xFF	; 255
 2e6:	ec f3       	brlt	.-6      	; 0x2e2 <__divsf3_pse+0x6a>
 2e8:	98 3e       	cpi	r25, 0xE8	; 232
 2ea:	dc f3       	brlt	.-10     	; 0x2e2 <__divsf3_pse+0x6a>
 2ec:	86 95       	lsr	r24
 2ee:	77 95       	ror	r23
 2f0:	67 95       	ror	r22
 2f2:	b7 95       	ror	r27
 2f4:	f7 95       	ror	r31
 2f6:	9f 5f       	subi	r25, 0xFF	; 255
 2f8:	c9 f7       	brne	.-14     	; 0x2ec <__divsf3_pse+0x74>
 2fa:	88 0f       	add	r24, r24
 2fc:	91 1d       	adc	r25, r1
 2fe:	96 95       	lsr	r25
 300:	87 95       	ror	r24
 302:	97 f9       	bld	r25, 7
 304:	08 95       	ret
 306:	e1 e0       	ldi	r30, 0x01	; 1
 308:	66 0f       	add	r22, r22
 30a:	77 1f       	adc	r23, r23
 30c:	88 1f       	adc	r24, r24
 30e:	bb 1f       	adc	r27, r27
 310:	62 17       	cp	r22, r18
 312:	73 07       	cpc	r23, r19
 314:	84 07       	cpc	r24, r20
 316:	ba 07       	cpc	r27, r26
 318:	20 f0       	brcs	.+8      	; 0x322 <__divsf3_pse+0xaa>
 31a:	62 1b       	sub	r22, r18
 31c:	73 0b       	sbc	r23, r19
 31e:	84 0b       	sbc	r24, r20
 320:	ba 0b       	sbc	r27, r26
 322:	ee 1f       	adc	r30, r30
 324:	88 f7       	brcc	.-30     	; 0x308 <__divsf3_pse+0x90>
 326:	e0 95       	com	r30
 328:	08 95       	ret

0000032a <__fixsfsi>:
 32a:	04 d0       	rcall	.+8      	; 0x334 <__fixunssfsi>
 32c:	68 94       	set
 32e:	b1 11       	cpse	r27, r1
 330:	b5 c0       	rjmp	.+362    	; 0x49c <__fp_szero>
 332:	08 95       	ret

00000334 <__fixunssfsi>:
 334:	98 d0       	rcall	.+304    	; 0x466 <__fp_splitA>
 336:	88 f0       	brcs	.+34     	; 0x35a <__fixunssfsi+0x26>
 338:	9f 57       	subi	r25, 0x7F	; 127
 33a:	90 f0       	brcs	.+36     	; 0x360 <__fixunssfsi+0x2c>
 33c:	b9 2f       	mov	r27, r25
 33e:	99 27       	eor	r25, r25
 340:	b7 51       	subi	r27, 0x17	; 23
 342:	a0 f0       	brcs	.+40     	; 0x36c <__fixunssfsi+0x38>
 344:	d1 f0       	breq	.+52     	; 0x37a <__fixunssfsi+0x46>
 346:	66 0f       	add	r22, r22
 348:	77 1f       	adc	r23, r23
 34a:	88 1f       	adc	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	1a f0       	brmi	.+6      	; 0x356 <__fixunssfsi+0x22>
 350:	ba 95       	dec	r27
 352:	c9 f7       	brne	.-14     	; 0x346 <__fixunssfsi+0x12>
 354:	12 c0       	rjmp	.+36     	; 0x37a <__fixunssfsi+0x46>
 356:	b1 30       	cpi	r27, 0x01	; 1
 358:	81 f0       	breq	.+32     	; 0x37a <__fixunssfsi+0x46>
 35a:	9f d0       	rcall	.+318    	; 0x49a <__fp_zero>
 35c:	b1 e0       	ldi	r27, 0x01	; 1
 35e:	08 95       	ret
 360:	9c c0       	rjmp	.+312    	; 0x49a <__fp_zero>
 362:	67 2f       	mov	r22, r23
 364:	78 2f       	mov	r23, r24
 366:	88 27       	eor	r24, r24
 368:	b8 5f       	subi	r27, 0xF8	; 248
 36a:	39 f0       	breq	.+14     	; 0x37a <__fixunssfsi+0x46>
 36c:	b9 3f       	cpi	r27, 0xF9	; 249
 36e:	cc f3       	brlt	.-14     	; 0x362 <__fixunssfsi+0x2e>
 370:	86 95       	lsr	r24
 372:	77 95       	ror	r23
 374:	67 95       	ror	r22
 376:	b3 95       	inc	r27
 378:	d9 f7       	brne	.-10     	; 0x370 <__fixunssfsi+0x3c>
 37a:	3e f4       	brtc	.+14     	; 0x38a <__fixunssfsi+0x56>
 37c:	90 95       	com	r25
 37e:	80 95       	com	r24
 380:	70 95       	com	r23
 382:	61 95       	neg	r22
 384:	7f 4f       	sbci	r23, 0xFF	; 255
 386:	8f 4f       	sbci	r24, 0xFF	; 255
 388:	9f 4f       	sbci	r25, 0xFF	; 255
 38a:	08 95       	ret

0000038c <__floatunsisf>:
 38c:	e8 94       	clt
 38e:	09 c0       	rjmp	.+18     	; 0x3a2 <__floatsisf+0x12>

00000390 <__floatsisf>:
 390:	97 fb       	bst	r25, 7
 392:	3e f4       	brtc	.+14     	; 0x3a2 <__floatsisf+0x12>
 394:	90 95       	com	r25
 396:	80 95       	com	r24
 398:	70 95       	com	r23
 39a:	61 95       	neg	r22
 39c:	7f 4f       	sbci	r23, 0xFF	; 255
 39e:	8f 4f       	sbci	r24, 0xFF	; 255
 3a0:	9f 4f       	sbci	r25, 0xFF	; 255
 3a2:	99 23       	and	r25, r25
 3a4:	a9 f0       	breq	.+42     	; 0x3d0 <__floatsisf+0x40>
 3a6:	f9 2f       	mov	r31, r25
 3a8:	96 e9       	ldi	r25, 0x96	; 150
 3aa:	bb 27       	eor	r27, r27
 3ac:	93 95       	inc	r25
 3ae:	f6 95       	lsr	r31
 3b0:	87 95       	ror	r24
 3b2:	77 95       	ror	r23
 3b4:	67 95       	ror	r22
 3b6:	b7 95       	ror	r27
 3b8:	f1 11       	cpse	r31, r1
 3ba:	f8 cf       	rjmp	.-16     	; 0x3ac <__floatsisf+0x1c>
 3bc:	fa f4       	brpl	.+62     	; 0x3fc <__floatsisf+0x6c>
 3be:	bb 0f       	add	r27, r27
 3c0:	11 f4       	brne	.+4      	; 0x3c6 <__floatsisf+0x36>
 3c2:	60 ff       	sbrs	r22, 0
 3c4:	1b c0       	rjmp	.+54     	; 0x3fc <__floatsisf+0x6c>
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	16 c0       	rjmp	.+44     	; 0x3fc <__floatsisf+0x6c>
 3d0:	88 23       	and	r24, r24
 3d2:	11 f0       	breq	.+4      	; 0x3d8 <__floatsisf+0x48>
 3d4:	96 e9       	ldi	r25, 0x96	; 150
 3d6:	11 c0       	rjmp	.+34     	; 0x3fa <__floatsisf+0x6a>
 3d8:	77 23       	and	r23, r23
 3da:	21 f0       	breq	.+8      	; 0x3e4 <__floatsisf+0x54>
 3dc:	9e e8       	ldi	r25, 0x8E	; 142
 3de:	87 2f       	mov	r24, r23
 3e0:	76 2f       	mov	r23, r22
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <__floatsisf+0x5e>
 3e4:	66 23       	and	r22, r22
 3e6:	71 f0       	breq	.+28     	; 0x404 <__floatsisf+0x74>
 3e8:	96 e8       	ldi	r25, 0x86	; 134
 3ea:	86 2f       	mov	r24, r22
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	60 e0       	ldi	r22, 0x00	; 0
 3f0:	2a f0       	brmi	.+10     	; 0x3fc <__floatsisf+0x6c>
 3f2:	9a 95       	dec	r25
 3f4:	66 0f       	add	r22, r22
 3f6:	77 1f       	adc	r23, r23
 3f8:	88 1f       	adc	r24, r24
 3fa:	da f7       	brpl	.-10     	; 0x3f2 <__floatsisf+0x62>
 3fc:	88 0f       	add	r24, r24
 3fe:	96 95       	lsr	r25
 400:	87 95       	ror	r24
 402:	97 f9       	bld	r25, 7
 404:	08 95       	ret

00000406 <__fp_inf>:
 406:	97 f9       	bld	r25, 7
 408:	9f 67       	ori	r25, 0x7F	; 127
 40a:	80 e8       	ldi	r24, 0x80	; 128
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	08 95       	ret

00000412 <__fp_nan>:
 412:	9f ef       	ldi	r25, 0xFF	; 255
 414:	80 ec       	ldi	r24, 0xC0	; 192
 416:	08 95       	ret

00000418 <__fp_pscA>:
 418:	00 24       	eor	r0, r0
 41a:	0a 94       	dec	r0
 41c:	16 16       	cp	r1, r22
 41e:	17 06       	cpc	r1, r23
 420:	18 06       	cpc	r1, r24
 422:	09 06       	cpc	r0, r25
 424:	08 95       	ret

00000426 <__fp_pscB>:
 426:	00 24       	eor	r0, r0
 428:	0a 94       	dec	r0
 42a:	12 16       	cp	r1, r18
 42c:	13 06       	cpc	r1, r19
 42e:	14 06       	cpc	r1, r20
 430:	05 06       	cpc	r0, r21
 432:	08 95       	ret

00000434 <__fp_round>:
 434:	09 2e       	mov	r0, r25
 436:	03 94       	inc	r0
 438:	00 0c       	add	r0, r0
 43a:	11 f4       	brne	.+4      	; 0x440 <__fp_round+0xc>
 43c:	88 23       	and	r24, r24
 43e:	52 f0       	brmi	.+20     	; 0x454 <__fp_round+0x20>
 440:	bb 0f       	add	r27, r27
 442:	40 f4       	brcc	.+16     	; 0x454 <__fp_round+0x20>
 444:	bf 2b       	or	r27, r31
 446:	11 f4       	brne	.+4      	; 0x44c <__fp_round+0x18>
 448:	60 ff       	sbrs	r22, 0
 44a:	04 c0       	rjmp	.+8      	; 0x454 <__fp_round+0x20>
 44c:	6f 5f       	subi	r22, 0xFF	; 255
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	08 95       	ret

00000456 <__fp_split3>:
 456:	57 fd       	sbrc	r21, 7
 458:	90 58       	subi	r25, 0x80	; 128
 45a:	44 0f       	add	r20, r20
 45c:	55 1f       	adc	r21, r21
 45e:	59 f0       	breq	.+22     	; 0x476 <__fp_splitA+0x10>
 460:	5f 3f       	cpi	r21, 0xFF	; 255
 462:	71 f0       	breq	.+28     	; 0x480 <__fp_splitA+0x1a>
 464:	47 95       	ror	r20

00000466 <__fp_splitA>:
 466:	88 0f       	add	r24, r24
 468:	97 fb       	bst	r25, 7
 46a:	99 1f       	adc	r25, r25
 46c:	61 f0       	breq	.+24     	; 0x486 <__fp_splitA+0x20>
 46e:	9f 3f       	cpi	r25, 0xFF	; 255
 470:	79 f0       	breq	.+30     	; 0x490 <__fp_splitA+0x2a>
 472:	87 95       	ror	r24
 474:	08 95       	ret
 476:	12 16       	cp	r1, r18
 478:	13 06       	cpc	r1, r19
 47a:	14 06       	cpc	r1, r20
 47c:	55 1f       	adc	r21, r21
 47e:	f2 cf       	rjmp	.-28     	; 0x464 <__fp_split3+0xe>
 480:	46 95       	lsr	r20
 482:	f1 df       	rcall	.-30     	; 0x466 <__fp_splitA>
 484:	08 c0       	rjmp	.+16     	; 0x496 <__fp_splitA+0x30>
 486:	16 16       	cp	r1, r22
 488:	17 06       	cpc	r1, r23
 48a:	18 06       	cpc	r1, r24
 48c:	99 1f       	adc	r25, r25
 48e:	f1 cf       	rjmp	.-30     	; 0x472 <__fp_splitA+0xc>
 490:	86 95       	lsr	r24
 492:	71 05       	cpc	r23, r1
 494:	61 05       	cpc	r22, r1
 496:	08 94       	sec
 498:	08 95       	ret

0000049a <__fp_zero>:
 49a:	e8 94       	clt

0000049c <__fp_szero>:
 49c:	bb 27       	eor	r27, r27
 49e:	66 27       	eor	r22, r22
 4a0:	77 27       	eor	r23, r23
 4a2:	cb 01       	movw	r24, r22
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret

000004a8 <__mulsf3>:
 4a8:	0b d0       	rcall	.+22     	; 0x4c0 <__mulsf3x>
 4aa:	c4 cf       	rjmp	.-120    	; 0x434 <__fp_round>
 4ac:	b5 df       	rcall	.-150    	; 0x418 <__fp_pscA>
 4ae:	28 f0       	brcs	.+10     	; 0x4ba <__mulsf3+0x12>
 4b0:	ba df       	rcall	.-140    	; 0x426 <__fp_pscB>
 4b2:	18 f0       	brcs	.+6      	; 0x4ba <__mulsf3+0x12>
 4b4:	95 23       	and	r25, r21
 4b6:	09 f0       	breq	.+2      	; 0x4ba <__mulsf3+0x12>
 4b8:	a6 cf       	rjmp	.-180    	; 0x406 <__fp_inf>
 4ba:	ab cf       	rjmp	.-170    	; 0x412 <__fp_nan>
 4bc:	11 24       	eor	r1, r1
 4be:	ee cf       	rjmp	.-36     	; 0x49c <__fp_szero>

000004c0 <__mulsf3x>:
 4c0:	ca df       	rcall	.-108    	; 0x456 <__fp_split3>
 4c2:	a0 f3       	brcs	.-24     	; 0x4ac <__mulsf3+0x4>

000004c4 <__mulsf3_pse>:
 4c4:	95 9f       	mul	r25, r21
 4c6:	d1 f3       	breq	.-12     	; 0x4bc <__mulsf3+0x14>
 4c8:	95 0f       	add	r25, r21
 4ca:	50 e0       	ldi	r21, 0x00	; 0
 4cc:	55 1f       	adc	r21, r21
 4ce:	62 9f       	mul	r22, r18
 4d0:	f0 01       	movw	r30, r0
 4d2:	72 9f       	mul	r23, r18
 4d4:	bb 27       	eor	r27, r27
 4d6:	f0 0d       	add	r31, r0
 4d8:	b1 1d       	adc	r27, r1
 4da:	63 9f       	mul	r22, r19
 4dc:	aa 27       	eor	r26, r26
 4de:	f0 0d       	add	r31, r0
 4e0:	b1 1d       	adc	r27, r1
 4e2:	aa 1f       	adc	r26, r26
 4e4:	64 9f       	mul	r22, r20
 4e6:	66 27       	eor	r22, r22
 4e8:	b0 0d       	add	r27, r0
 4ea:	a1 1d       	adc	r26, r1
 4ec:	66 1f       	adc	r22, r22
 4ee:	82 9f       	mul	r24, r18
 4f0:	22 27       	eor	r18, r18
 4f2:	b0 0d       	add	r27, r0
 4f4:	a1 1d       	adc	r26, r1
 4f6:	62 1f       	adc	r22, r18
 4f8:	73 9f       	mul	r23, r19
 4fa:	b0 0d       	add	r27, r0
 4fc:	a1 1d       	adc	r26, r1
 4fe:	62 1f       	adc	r22, r18
 500:	83 9f       	mul	r24, r19
 502:	a0 0d       	add	r26, r0
 504:	61 1d       	adc	r22, r1
 506:	22 1f       	adc	r18, r18
 508:	74 9f       	mul	r23, r20
 50a:	33 27       	eor	r19, r19
 50c:	a0 0d       	add	r26, r0
 50e:	61 1d       	adc	r22, r1
 510:	23 1f       	adc	r18, r19
 512:	84 9f       	mul	r24, r20
 514:	60 0d       	add	r22, r0
 516:	21 1d       	adc	r18, r1
 518:	82 2f       	mov	r24, r18
 51a:	76 2f       	mov	r23, r22
 51c:	6a 2f       	mov	r22, r26
 51e:	11 24       	eor	r1, r1
 520:	9f 57       	subi	r25, 0x7F	; 127
 522:	50 40       	sbci	r21, 0x00	; 0
 524:	8a f0       	brmi	.+34     	; 0x548 <__mulsf3_pse+0x84>
 526:	e1 f0       	breq	.+56     	; 0x560 <__mulsf3_pse+0x9c>
 528:	88 23       	and	r24, r24
 52a:	4a f0       	brmi	.+18     	; 0x53e <__mulsf3_pse+0x7a>
 52c:	ee 0f       	add	r30, r30
 52e:	ff 1f       	adc	r31, r31
 530:	bb 1f       	adc	r27, r27
 532:	66 1f       	adc	r22, r22
 534:	77 1f       	adc	r23, r23
 536:	88 1f       	adc	r24, r24
 538:	91 50       	subi	r25, 0x01	; 1
 53a:	50 40       	sbci	r21, 0x00	; 0
 53c:	a9 f7       	brne	.-22     	; 0x528 <__mulsf3_pse+0x64>
 53e:	9e 3f       	cpi	r25, 0xFE	; 254
 540:	51 05       	cpc	r21, r1
 542:	70 f0       	brcs	.+28     	; 0x560 <__mulsf3_pse+0x9c>
 544:	60 cf       	rjmp	.-320    	; 0x406 <__fp_inf>
 546:	aa cf       	rjmp	.-172    	; 0x49c <__fp_szero>
 548:	5f 3f       	cpi	r21, 0xFF	; 255
 54a:	ec f3       	brlt	.-6      	; 0x546 <__mulsf3_pse+0x82>
 54c:	98 3e       	cpi	r25, 0xE8	; 232
 54e:	dc f3       	brlt	.-10     	; 0x546 <__mulsf3_pse+0x82>
 550:	86 95       	lsr	r24
 552:	77 95       	ror	r23
 554:	67 95       	ror	r22
 556:	b7 95       	ror	r27
 558:	f7 95       	ror	r31
 55a:	e7 95       	ror	r30
 55c:	9f 5f       	subi	r25, 0xFF	; 255
 55e:	c1 f7       	brne	.-16     	; 0x550 <__mulsf3_pse+0x8c>
 560:	fe 2b       	or	r31, r30
 562:	88 0f       	add	r24, r24
 564:	91 1d       	adc	r25, r1
 566:	96 95       	lsr	r25
 568:	87 95       	ror	r24
 56a:	97 f9       	bld	r25, 7
 56c:	08 95       	ret

0000056e <_exit>:
 56e:	f8 94       	cli

00000570 <__stop_program>:
 570:	ff cf       	rjmp	.-2      	; 0x570 <__stop_program>
